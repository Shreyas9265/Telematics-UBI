services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ubi
      POSTGRES_PASSWORD: ubi
      POSTGRES_DB: ubi
    # Use a non-default host port to avoid conflicts with any local Postgres
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ubi -d ubi || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn src.api:app --host 0.0.0.0 --port 8000
    environment:
      # SQLAlchemy URL to Postgres in the Compose network
      DB_URL: postgresql+psycopg2://ubi:ubi@db:5432/ubi
      # trivial API key for local usage
      API_KEY: dev-key
      # where the API will append / update CSV logs
      CSV_PATH: /app/data/ingested.csv
    volumes:
      # let the API read/write the CSV to your host ./data folder
      - ./data:/app/data
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health >/dev/null || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped

  ui:
    build:
      context: .
    command: >
      streamlit run src/dashboard.py
      --server.port 8501
      --server.headless true
      --server.enableCORS false
    environment:
      # inside the Compose network, the API is reachable via service name "api"
      API_BASE: http://api:8000
      # tell the UI where the NDJSON lives inside the container
      environment:
    EVENTS_FILE: /data/events.ndjson
    volumes:
      - ./data:/data:ro
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8502:8501"
    restart: unless-stopped

volumes:
  pgdata:
